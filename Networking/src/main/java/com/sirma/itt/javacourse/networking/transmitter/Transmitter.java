package com.sirma.itt.javacourse.networking.transmitter;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 * The class {@link Transmitter} contains methods for creating user interface for the server that
 * sends messages.
 */
public class Transmitter extends JFrame {

	private static final long serialVersionUID = 4469088764885447439L;
	private JTextField tempTextField;
	private MulticastingServer multicastingServer;

	/**
	 * Initializes the components of the user interface.
	 */
	public Transmitter() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	private void initComponents() {
		tempTextField = new JTextField();
		JButton stopServer = new JButton();
		JButton startServer = new JButton();
		JPanel contentPane;

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Server");

		setBounds(100, 100, 325, 225);
		contentPane = new JPanel();
		setContentPane(contentPane);
		contentPane.setLayout(null);

		tempTextField.setBounds(10, 30, 290, 40);
		add(tempTextField);
		startServer.setText("Start");
		startServer.setBounds(10, 80, 140, 40);
		add(startServer);
		startServer.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				tempTextField.setText("Server started.");
				multicastingServer = new MulticastingServer();
				multicastingServer.start();
			}
		});
		stopServer.setText("Stop");
		stopServer.setBounds(160, 80, 140, 40);
		add(stopServer);
		stopServer.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				tempTextField.setText("Server stopped.");
				multicastingServer.interrupt();
			}
		});
	}

}
